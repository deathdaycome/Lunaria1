// hooks/use-performance-mode.ts  
import { useState, useEffect } from 'react';

interface PerformanceSettings {
  reducedMotion: boolean;
  isMobile: boolean;
  isLowPerformance: boolean;
  shouldReduceAnimations: boolean;
  isTelegramWebApp: boolean;
  deviceTier: 'high' | 'medium' | 'low';
}

export function usePerformanceMode(): PerformanceSettings {
  const [settings, setSettings] = useState<PerformanceSettings>({
    reducedMotion: false,
    isMobile: false,
    isLowPerformance: false,
    shouldReduceAnimations: false,
    isTelegramWebApp: false,
    deviceTier: 'high',
  });

  useEffect(() => {
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ)
    const determineDeviceTier = (): 'high' | 'medium' | 'low' => {
      const memory = (navigator as any).deviceMemory;
      const cores = navigator.hardwareConcurrency || 2;
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º tier –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
      if (memory >= 8 && cores >= 4) return 'high';
      if (memory >= 4 || cores >= 2) return 'medium';
      return 'low';
    };

    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||
                     window.innerWidth <= 768;
    const isTelegramWebApp = !!(window as any).Telegram?.WebApp?.platform;
    
    const deviceTier = determineDeviceTier();
    
    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–ø—Ä–µ–¥–µ–ª—è–µ–º isLowPerformance —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ù–ï –¥–ª—è –∞–≤—Ç–æ–ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    const connection = (navigator as any).connection;
    const isLowPerformance = deviceTier === 'low' || 
      (connection?.effectiveType === 'slow-2g') ||
      (connection?.effectiveType === '2g');

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: shouldReduceAnimations –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–∞–∑–æ–≤—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö
    // –ù–ï –Ω–∞ —Ç–µ–∫—É—â–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    const shouldReduceAnimations = prefersReducedMotion || 
                                  (isMobile && deviceTier === 'low' && prefersReducedMotion);

    setSettings({
      reducedMotion: prefersReducedMotion,
      isMobile,
      isLowPerformance: !!isLowPerformance,
      shouldReduceAnimations,
      isTelegramWebApp,
      deviceTier,
    });

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ CSS –∫–ª–∞—Å—Å—ã, –ù–ï performance-*
    const documentClasses = document.documentElement.classList;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å —Ä–µ–¥—É—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–Ω–∏–º–∞—Ü–∏–π –¢–û–õ–¨–ö–û –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —ç—Ç–æ–≥–æ —Ö–æ—á–µ—Ç
    if (shouldReduceAnimations) {
      documentClasses.add('reduced-animations');
      console.log('üéõÔ∏è –í–∫–ª—é—á–µ–Ω—ã —Ä–µ–¥—É—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)');
    } else {
      documentClasses.remove('reduced-animations');
    }

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å—ã –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (isTelegramWebApp) {
      documentClasses.add('tg-viewport');
      document.body.classList.add('telegram-webapp');
      console.log('üì± –û–±–Ω–∞—Ä—É–∂–µ–Ω Telegram WebApp');
    }

    if (isMobile) {
      documentClasses.add('mobile-device');
      console.log('üì± –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ');
    }

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –∫–ª–∞—Å—Å tier —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ (–¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏)
    documentClasses.add(`device-tier-${deviceTier}`);
    console.log(`üíª Tier —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: ${deviceTier.toUpperCase()}`);

    // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ–∫—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ù–ê–í–°–ï–ì–î–ê
    documentClasses.remove('performance-medium', 'performance-low', 'performance-ultra-low');
    documentClasses.add('performance-high');
    console.log('üöÄ –ù–ê–í–°–ï–ì–î–ê —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–µ–∂–∏–º performance-high');

    // –£–ë–†–ê–ù–û: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ ultra-low —Ä–µ–∂–∏–º
    // –¢–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ device-tier-* –∫–ª–∞—Å—Å—ã –≤–ª–∏—è—é—Ç –Ω–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é

    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –¢–û–õ–¨–ö–û –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');
    const handleChange = () => {
      const newReducedMotion = mediaQuery.matches;
      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞ –æ—Å–Ω–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const newShouldReduce = newReducedMotion || 
                             (isMobile && deviceTier === 'low' && newReducedMotion);
      
      setSettings(prev => ({
        ...prev,
        reducedMotion: newReducedMotion,
        shouldReduceAnimations: newShouldReduce,
      }));

      if (newShouldReduce) {
        documentClasses.add('reduced-animations');
        console.log('üéõÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∫–ª—é—á–∏–ª —Ä–µ–¥—É—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏');
      } else {
        documentClasses.remove('reduced-animations');
        console.log('üéõÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª —Ä–µ–¥—É—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏');
      }

      // –î–û–ë–ê–í–õ–ï–ù–û: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º performance-high –ø—Ä–∏ –ª—é–±—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
      documentClasses.remove('performance-medium', 'performance-low', 'performance-ultra-low');
      documentClasses.add('performance-high');
    };

    mediaQuery.addEventListener('change', handleChange);
    
    return () => {
      mediaQuery.removeEventListener('change', handleChange);
      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–∫—Ä–∏—Ç–∏—á–Ω—ã–µ –∫–ª–∞—Å—Å—ã
      documentClasses.remove('reduced-animations', 'tg-viewport', 'mobile-device', `device-tier-${deviceTier}`);
      document.body.classList.remove('telegram-webapp');
      // –ù–ï –£–î–ê–õ–Ø–ï–ú performance-high - –æ—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞–≤—Å–µ–≥–¥–∞
    };
  }, []);

  return settings;
}

export function useAnimationController() {
  const { shouldReduceAnimations, deviceTier } = usePerformanceMode();

  const getAnimationClass = (normalClass: string, reducedClass?: string) => {
    return shouldReduceAnimations ? (reducedClass || '') : normalClass;
  };

  const conditionalStyle = (normalStyle: React.CSSProperties, reducedStyle?: React.CSSProperties) => {
    return shouldReduceAnimations ? (reducedStyle || {}) : normalStyle;
  };

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±—Ä–∞–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è medium —É—Å—Ç—Ä–æ–π—Å—Ç–≤
  const getAnimationDuration = (normal: number, reduced?: number) => {
    if (shouldReduceAnimations) return reduced || 0;
    // –£–ë–†–ê–ù–û: if (deviceTier === 'medium') return normal * 0.7;
    return normal; // –í—Å–µ–≥–¥–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–æ—Å–∏–ª —Ä–µ–¥—É—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
  };

  return {
    shouldReduceAnimations,
    deviceTier,
    getAnimationClass,
    conditionalStyle,
    getAnimationDuration,
  };
}