import { useState, useEffect, useRef } from "react";
import MainLayout from "@/components/layout/main-layout";
import HoroscopeCard from "@/components/horoscope/horoscope-card";
import FriendsSection from "@/components/horoscope/friends-section";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { useQuery } from "@tanstack/react-query";
import { Skeleton } from "@/components/ui/skeleton";
import { useLocation } from "wouter";
import { getZodiacSign } from "@/lib/zodiac";
import CosmicLoader from "@/components/shared/cosmic-loader";
import { useAuth } from "@/hooks/use-auth";

type HoroscopePeriod = "today" | "week" | "month";

type UserProfileData = {
  id: number;
  name: string;
  gender: "male" | "female";
  birthDate: string;
  birthTime?: string;
  birthPlace?: string;
  zodiacSign: string;
  subscriptionType: string;
};

export default function HoroscopePage() {
  const [, navigate] = useLocation();
  const [period, setPeriod] = useState<HoroscopePeriod>("today");
  
  // –†–µ—Ñ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ HoroscopeCard
  const horoscopeCardRef = useRef<{ handleRefresh: () => void } | null>(null);
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { user, isLoading: authLoading } = useAuth();

  // –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
  const { data: userProfile, isLoading, error } = useQuery({
    queryKey: ["/api/user"],
    queryFn: async () => {
      const response = await fetch("/api/user");
      if (!response.ok) {
        throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω");
      }
      return response.json() as Promise<UserProfileData>;
    },
    enabled: !authLoading, // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    retry: 1,
  });

  // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  useEffect(() => {
    if (!authLoading && !user && error) {
      console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é");
      navigate("/");
    }
  }, [authLoading, user, error, navigate]);

  // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –≥–æ—Ä–æ—Å–∫–æ–ø–µ
  const handleRefresh = () => {
    console.log("üî• MainLayout refresh clicked - –≤—ã–∑—ã–≤–∞–µ–º —Ä–µ–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥–æ—Ä–æ—Å–∫–æ–ø–∞");
    
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ HoroscopeCard
    if (horoscopeCardRef.current && horoscopeCardRef.current.handleRefresh) {
      horoscopeCardRef.current.handleRefresh();
    } else {
      console.warn("‚ö†Ô∏è horoscopeCardRef.current.handleRefresh –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω");
    }
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  if (authLoading || isLoading) {
    return (
      <MainLayout 
        title="–ì–æ—Ä–æ—Å–∫–æ–ø" 
        activeTab="horoscope"
        showRefresh={false}
        showHeader={false}
      >
        <div className="space-y-6 mb-20" style={{ paddingTop: 'max(20px, env(safe-area-inset-top, 20px))' }}>
          <div className="card p-8 flex flex-col items-center justify-center min-h-[300px]">
            <CosmicLoader size="medium" text="–ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å..." />
          </div>
        </div>
      </MainLayout>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
  if (error || !userProfile) {
    return (
      <MainLayout 
        title="–ì–æ—Ä–æ—Å–∫–æ–ø" 
        activeTab="horoscope"
        showRefresh={false}
        showHeader={false}
      >
        <div className="space-y-6 mb-20" style={{ paddingTop: 'max(20px, env(safe-area-inset-top, 20px))' }}>
          <div className="card p-8 flex flex-col items-center justify-center min-h-[300px]">
            <p className="text-white text-center">
              –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. 
              <br />
              <button 
                onClick={() => navigate("/")} 
                className="text-primary underline mt-2"
              >
                –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
              </button>
            </p>
          </div>
        </div>
      </MainLayout>
    );
  }

  return (
    <MainLayout 
      title="–ì–æ—Ä–æ—Å–∫–æ–ø" 
      activeTab="horoscope"
      showRefresh={true}
      onRefresh={handleRefresh}
      showHeader={false}
    >
      <div className="space-y-6 mb-20" style={{ paddingTop: 'max(60px, env(safe-area-inset-top, 60px))' }}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
        <div className="px-4 mb-4">
          <h2 className="page-heading font-gilroy text-center">
            {userProfile.name}, –≤–∞—à –≥–æ—Ä–æ—Å–∫–æ–ø
          </h2>
        </div>

        <HoroscopeCard 
          ref={horoscopeCardRef}
          period={period}
          setPeriod={setPeriod}
          zodiacSign={getZodiacSign(new Date(userProfile.birthDate)).name}
          userId={userProfile.id}
          userName={userProfile.name}
          userBirthDate={userProfile.birthDate}
          subscriptionType={userProfile.subscriptionType}
        />

        {userProfile?.id && (
          <FriendsSection />
        )}
      </div>

      {/* ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ SelectContent */}
      <style jsx global>{`
        /* –ó–∞—â–∏—Ç–∞ –¥–ª—è SelectContent –æ—Ç –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏—è Telegram —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º */
        [data-radix-select-content] {
          z-index: 99999 !important;
          background-color: #2a1d51 !important;
          border: 1px solid #583e8b !important;
          position: absolute !important;
          transform-origin: var(--radix-select-content-transform-origin);
        }
        
        [data-radix-select-viewport] {
          z-index: 99999 !important;
        }
        
        /* –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω */
        [data-radix-dialog-content] {
          position: fixed !important;
          top: 50% !important;
          left: 50% !important;
          transform: translate(-50%, -50%) !important;
          max-height: 85vh !important;
          z-index: 99999 !important;
        }
        
        /* –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ Dialog overlay */
        [data-radix-dialog-overlay] {
          position: fixed !important;
          inset: 0 !important;
          z-index: 99998 !important;
        }
        
        /* –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç—É –≤ safe area */
        @supports (padding-top: env(safe-area-inset-top)) {
          .telegram-safe-area {
            padding-top: max(20px, env(safe-area-inset-top, 20px));
          }
        }
      `}</style>
    </MainLayout>
  );
}