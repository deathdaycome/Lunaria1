import React from 'react';

// –¢–∏–ø –¥–ª—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ (—Ñ–∞–∑—ã –ª—É–Ω—ã –∏–ª–∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã)
type DecorationPosition = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right';

// –°–∏–º–≤–æ–ª—ã —Ñ–∞–∑ –ª—É–Ω—ã
const moonPhaseSymbols = ['üåë', 'üåí', 'üåì', 'üåî', 'üåï', 'üåñ', 'üåó', 'üåò'];

// –ê—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã
const astrologySymbols = ['‚òø', '‚ôÄ', '‚ôÅ', '‚ôÇ', '‚ôÉ', '‚ôÑ', '‚ôÖ', '‚ôÜ', '‚ôá'];

interface DecorativeSymbolsProps {
  type?: 'moon' | 'astrology';
}

export default function DecorativeSymbols({ type = 'moon' }: DecorativeSymbolsProps) {
  const symbols = type === 'moon' ? moonPhaseSymbols : astrologySymbols;
  
  // –í—ã–±–∏—Ä–∞–µ–º 4 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–∏–º–≤–æ–ª–∞
  const getRandomSymbols = () => {
    const shuffled = [...symbols].sort(() => 0.5 - Math.random());
    return shuffled.slice(0, 4);
  };
  
  const randomSymbols = getRandomSymbols();
  
  // –ù–µ —Ç—Ä–æ–≥–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ - —Ä–∞–±–æ—Ç–∞–µ—Ç –º–∞–≥–∏—á–µ—Å–∫–∏–º –æ–±—Ä–∞–∑–æ–º
  const positions: DecorationPosition[] = ['top-left', 'top-right', 'bottom-left', 'bottom-right'];
  
  return (
    <>
      {positions.map((position, index) => (
        <div key={position} className={`decorative-symbol ${position}`}>
          <span style={{ color: getSymbolColor(type, index) }} className="text-xl">
            {randomSymbols[index]}
          </span>
        </div>
      ))}
    </>
  );
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ —Å–∏–º–≤–æ–ª–∞
function getSymbolColor(type: 'moon' | 'astrology', index: number): string {
  if (type === 'moon') {
    const moonColors = ['#C0C0C0', '#D8D8D8', '#E0E0E0', '#B8B8B8'];
    return moonColors[index];
  } else {
    const astrologyColors = ['#FFD700', '#C0C0C0', '#9B59B6', '#87CEEB'];
    return astrologyColors[index];
  }
}